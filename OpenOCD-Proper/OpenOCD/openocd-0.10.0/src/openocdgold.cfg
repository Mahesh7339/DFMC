
#!/bin/bash

#Selecting JTAG as the medium


#setting the board parameters
#BOARD=imx6ull
#CPUTAPID=0x82130000 ;From the reference manual(CPU0 Debug)
#DAP_TAPID=0x5ba00477


set CHIPNAME imx6ull
set DAP_TAPID 0x5ba00477
set SJC_TAPID 0x088c101d
set CPU_TAPID 0x82130000
source [find /home/accord/DFMC/OpenOCD-Proper/OpenOCD/openocd-0.10.0/tcl/interface/jlink.cfg]
transport select jtag
adapter_khz 1000
source [find /home/accord/DFMC/OpenOCD-Proper/OpenOCD/openocd-0.10.0/tcl/target/imx6.cfg]

proc gdbconnect {} {
	echo "GDB ATTATCH123....."
	reset init	
	halt
	echo "Halt done" }

proc imx6_init_ {} {
	echo "imx6_init"
	halt

	mwh phys 0x020bc000 0x30
	mww phys 0x020c4068 0xffffffff

	mww phys 0x020c406c 0xffffffff
	mww phys 0x020c4070 0xfc3fffff
	mww phys 0x020c4074 0xffffffff
	mww phys 0x020c4078 0xffffffff
	mww phys 0x020c407c 0xffffffff
	mww phys 0x020c4080 0xffffffff

	
	mww phys 0x020e04b4 0x000c0000

	mww phys 0x020e04ac 0x00000000
	mww phys 0x020e027c 0x00000030

	mww phys 0x020e0250 0x00000030

	mww phys 0x020e024c 0x00000030
	mww phys 0x020e024c 0x00000030

	mww phys 0x020e0288 0x000c0030


	mww phys 0x020e0270 0x00000000

	mww phys 0x020e0260 0x00000030
	
	mww phys 0x020e0264 0x00000030
	
	mww phys 0x020e04a0 0x00000030

	
	mww phys 0x020e0494 0x00020000


	mww phys 0x020e0280 0x00000030

	mww phys 0x020e0284 0x00000030

	mww phys 0x020e04b0 0x00020000
	mww phys 0x020e0498 0x00000030
	
	mww phys 0x020e04a4 0x00000030


	mww phys 0x020e0244 0x00000030
	mww phys 0x020e0248 0x00000030


	mww phys 0x021b001c 0x00008000
	
	mww phys 0x021b0800 0xa1390003
	 
	mww phys 0x021b080c 0x00000004
	
	mww phys 0x021b083c 0x41640158
	
	mww phys 0x021b0848 0x40403237
	
	mww phys 0x021b0850 0x40403C33
	
	mww phys 0x021b081c 0x33333333
	
	mww phys 0x021b0820 0x33333333
	
	mww phys 0x021b082c 0xf3333333
	
	mww phys 0x021b0830 0xf3333333
	
	mww phys 0x021b08c0 0x00944009
	
	mww phys 0x021b08b8 0x00000800
	
	mww phys 0x021b0004 0x0002002d
	
	mww phys 0x021b0008 0x1b333030
	 
	mww phys 0x021b000c 0x676b52f3
	
	mww phys 0x021b0010 0xb66d0b63
	
	mww phys 0x021b0014 0x01ff00db
	
	mww phys 0x021b0018 0x00201740
	
	mww phys 0x021b001c 0x00008000
	
	mww phys 0x021b002c 0x000026d2
	 
	mww phys 0x021b0030 0x006b1023
	
	mww phys 0x021b0040 0x0000004f
	
	mww phys 0x021b0000 0x84180000

	mww phys 0x021b0890 0x00400000

	mww phys 0x021b001c 0x02008032
	
	mww phys 0x021b001c 0x00008033

	mww phys 0x021b001c 0x00048031
	
	mww phys 0x021b001c 0x15208030
	
	mww phys 0x021b001c 0x04008040
	
	mww phys 0x021b0020 0x00000800
	 
	mww phys 0x021b0818 0x00000227
	
	mww phys 0x021b0004 0x0002552d
	
	mww phys 0x021b0404 0x00011006
	
	mww phys 0x021b001c 0x00000000

	echo "UART 2 Initialization.."
	mww phys 0x020e0094 0x00000000
	mww phys 0x020e0098 0x00000000
	mww phys 0x020e009c 0x00000000
	mww phys 0x020e00a0 0x00000000
	
	echo "Done....."
	adapter_khz 6000

}
proc imx6_dbginit {target} {
        #General Cortex-A8/A9 debug initialisation
	echo "cortex a debug init"        
	cortex_a dbginit
}

# Slow speed to be sure it will work
#adapter_khz 1000
#$_TARGETNAME configure -event reset-start { adapter_khz 100 }

$_TARGETNAME configure -event reset-assert-post "imx6_dbginit $_TARGETNAME"
#$_TARGETNAME configure -event gdb-attach { 
#	reset init }
$_TARGETNAME configure -event gdb-attach {gdbconnect} 
#$_TARGETNAME configure -event examine-end {imx6_init_} 
$_TARGETNAME configure -event reset-assert-pre {imx6_init_} 
	

$_TARGETNAME configure -event reset-start {echo "Reset-start..."}

$_TARGETNAME configure -event reset-end {echo "Reset-end..."}

$_TARGETNAME configure -event reset-init {echo "Reset-init" }


